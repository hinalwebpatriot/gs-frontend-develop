   
   
log_format  postdata  '$http_x_forwarded_for ($remote_addr) - $remote_user [$time_local], "URL: $scheme://$host$request_uri", "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" """""""""""""""""""""""""""""""""""  content-type: $http_content_type  body: $request_body | upstream_time:     $upstream_response_time , reponse_time: $request_time ';


    access_log  /dev/stdout postdata;
    error_log /dev/stdout;


server {
  server_name {SERVER_NAME2};
  rewrite ^(.*) https://{SERVER_NAME}$1 permanent;
}


server {
    listen 80;

    server_name	{SERVER_NAME};

    if ($http_x_forwarded_proto = 'http'){
	return 301 https://$host$request_uri;
    }

    location / {

    if ($http_origin ~* "^https?://({SERVER_NAME}|webcache.googleusercontent.com)$") {
      add_header 'Access-Control-Allow-Origin' '$http_origin';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
      add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
    }

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'https://{SERVER_NAME}';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
      add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }


	proxy_pass http://frontend:3000;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;
    }
}
